#!/usr/bin/env bash

DOTFILES_DIRECTORY="${HOME}/dotfiles"
DOTFILES_GIT_REMOTE="https://github.com/shlikhota/dotfiles.git"

is_xcode_installed() {
    xcode-select --print-path &> /dev/null
    return $?
}

seek_confirmation() {
    printf "\n"
    read -r -p "$* (y/n) " -n 1 REPLY
    printf "\n"
    [[ "$REPLY" =~ ^[Yy]$ ]]
}

if ! seek_confirmation "There will be installed xcode cli tools and nix. Do you want to proceed?"; then
    echo "Canceled."
    exit 0
fi

if ! is_xcode_installed; then
    echo "Installing dependencies..."
    xcode-select --install
    echo "Waiting for Xcode command line tools to finish installing..."
    while ! is_xcode_installed; do
        sleep 1
    done
    echo "Xcode command line tools has been installed."
else
    echo "Xcode has already been installed."
fi

if [[ ! -d ${DOTFILES_DIRECTORY} ]]; then
    echo "Cloning repository..."
    git clone ${DOTFILES_GIT_REMOTE} ${DOTFILES_DIRECTORY}
else
    echo "Dotfiles have already been cloned."
fi

cd ${DOTFILES_DIRECTORY}

if ! command -v nix > /dev/null; then
  echo "Installing nix..."
  curl --proto '=https' --tlsv1.2 -sSf -L https://install.determinate.systems/nix | sh -s -- install
else
  echo "Nix has already been installed."
fi

if ! command -v nix &>/dev/null; then
   . "/nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh"
fi

if ! command -v nix &>/dev/null; then
    echo "Nix hasn't been installed."
    exit 1
fi

if seek_confirmation "Do you want to apply nix configuration?"; then
    nix run nix-darwin -- switch --flake ${DOTFILES_DIRECTORY}#home
    echo "Nix configurations haven been applied."
fi

if seek_confirmation "Do you want to apply Safari configuration?"; then
    ./scripts/safari-defaults.sh
    echo "Safari configurations have been applied."
fi

if seek_confirmation "Do you want to set asking password immediately after locking screen?"; then
    sysadminctl -screenLock immediate -password -
    echo "Password will be asked right after locking screen."
fi
